//VARIABLES
$black-color: #000;
$gray-color: #89767E;
$white-color: #fff;

//MIXIN
//mixin es una función que sirve para poder reutilizar código de estilos
//Sintaxis: @mixin nombre-mixin(parámetros) { }
@mixin theme($fill-color: #000, $font-color: #fff) {
    background-color: $fill-color;
    color: $font-color;
}

@mixin displayContainer (
  $height: 600px,
  $flex: flex,
  $justifiy: space-between,
  $align: flex-start  
) {
    height: $height;
    display: $flex;
    justify-content: $justifiy;
    align-items: $align;
}

@mixin alertTheme($color: #58FF33, $padding: 10px) {
    background-color: $color;
    padding: $padding;
    color: $white-color;
    border: 2px solid $black-color;
    border-radius: 12px;
}

* {
    font-family: Helvetica, Arial, sans-serif
}

body {
    //Se puede pasar indicando los valores respetando el orden de los parámetros
    @include theme(#F29D09, #A109F2);
}

.container {
    //Se puede pasar indicando el nombre de los parámetros, sin respetar el orden 
    @include displayContainer($flex: flex, $height: 100vm);
}

.success {
    @include alertTheme(#57F209, 10px);
}

.warning {
    @include alertTheme(#F2CB09, 12px);
}

.error {
    @include alertTheme(#F2093E, 14px);
}

.info {
    @include alertTheme(#09F2E7, 16px);
}

//NESTING
header {
    //'&' referencia al elemento contenedor. En programación orientada a objetos sería equivalente a 'this'
    &:hover {
        background: blue;
    }
    
    a {
        text-decoration: none;
        &:hover {
            background: brown;
        }
    }

    ul {
        padding: 20px;
    }
    
    //Primer li
    > li {
        color: red;
    }

    .nombre-clase {
        color: pink;
    }

    ul {
        li {
            background: blueviolet;
            margin-right: 20px;

            &:last-child {
                margin-right: 0;
            }

            &:first-child {
                margin-left: 20px;
            }

            &:hover {
                background: green;
            }
        }
    }
}